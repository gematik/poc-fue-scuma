package de.gematik.scuma.contracts

import de.gematik.kether.abi.DataDecoder
import de.gematik.kether.abi.DataEncoder
import de.gematik.kether.abi.isTypeDynamic
import de.gematik.kether.abi.types.*
import de.gematik.kether.contracts.Contract
import de.gematik.kether.contracts.Event
import de.gematik.kether.eth.Eth
import de.gematik.kether.eth.types.*
import de.gematik.kether.extensions.hexToByteArray
import de.gematik.kether.extensions.keccak
import kotlinx.serialization.ExperimentalSerializationApi

@OptIn(ExperimentalSerializationApi::class)
class ScumaContract(
    eth: Eth,
    baseTransaction: Transaction = Transaction()
) : Contract(eth, baseTransaction) {
    companion object {
        // deployment
        val byteCode =
            "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018081600181540180825580915050039060005260206000200160009054906101000a905050600360018160018154018082558091505003906000526020600020905050611df3806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c14987cf11610066578063c14987cf146100f6578063c6512a4314610112578063e28c72201461012e578063e3d15bb014610138578063ec8b2a411461015457610093565b8063037b48d41461009857806323241e61146100a25780638aca054b146100be578063a31c8ebb146100da575b600080fd5b6100a0610184565b005b6100bc60048036038101906100b7919061164d565b61030b565b005b6100d860048036038101906100d3919061179a565b6104dc565b005b6100f460048036038101906100ef919061175a565b610680565b005b610110600480360381019061010b919061179a565b6108ae565b005b61012c60048036038101906101279190611707565b6109b3565b005b610136610b69565b005b610152600480360381019061014d919061164d565b610cac565b005b61016e6004803603810190610169919061167a565b610df4565b60405161017b9190611916565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020990611998565b60405180910390fd5b60005b600180805490506102269190611a27565b81101561030857600260006001838154811061024557610244611bfd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560018054806102c0576102bf611bce565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055808061030090611b27565b915050610215565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090611998565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156104d85760018080805490506103f89190611a27565b8154811061040957610408611bfd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811061044857610447611bfd565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054806104a2576104a1611bce565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055590611978565b60405180910390fd5b60046001816001815401808255809150500390600052602060002050506003600181600181540180825580915050039060005260206000209050508063ffffffff16600360016003805490506105b49190611a27565b815481106105c5576105c4611bfd565b5b906000526020600020906002020160000181905550600460016004805490506105ee9190611a27565b815481106105ff576105fe611bfd565b5b906000526020600020016003600160038054905061061d9190611a27565b8154811061062e5761062d611bfd565b5b906000526020600020906002020160010190805461064d9291906112c2565b5060016003805490506106609190611a27565b600560008363ffffffff1681526020019081526020016000208190555050565b600060056000848152602001908152602001600020549050600081116106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290611958565b60405180910390fd5b6000600382815481106106f1576106f0611bfd565b5b906000526020600020906002020190508060010180549050831061074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074190611938565b60405180910390fd5b80600101600182600101805490506107629190611a27565b8154811061077357610772611bfd565b5b9060005260206000200181600101848154811061079357610792611bfd565b5b906000526020600020016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff0219169083600381111561083c5761083b611b9f565b5b02179055509050508060010180548061085857610857611bce565b5b60019003818190600052602060002001600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690555050905550505050565b6000600560008363ffffffff16815260200190815260200160002054905060008111156109af57600360016003805490506108e99190611a27565b815481106108fa576108f9611bfd565b5b90600052602060002090600202016003828154811061091c5761091b611bfd565b5b906000526020600020906002020160008201548160000155600182018160010190805461094a9291906113b8565b5090505060038054806109605761095f611bce565b5b600190038181906000526020600020906002020160008082016000905560018201600061098d91906114ae565b50509055600560008363ffffffff168152602001908152602001600020600090555b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890611998565b60405180910390fd5b6000600560008581526020019081526020016000205490506000811115610b635760038181548110610a7657610a75611bfd565b5b906000526020600020906002020160010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001846003811115610ac157610ac0611b9f565b5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836003811115610b5b57610b5a611b9f565b5b021790555050505b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611998565b60405180910390fd5b60006001600380549050610c0b9190611a27565b90505b6000811015610ca9576005600060038381548110610c2f57610c2e611bfd565b5b9060005260206000209060020201600001548152602001908152602001600020600090556003805480610c6557610c64611bce565b5b6001900381819060005260206000209060020201600080820160009055600182016000610c9291906114ae565b505090558080610ca190611acc565b915050610c0e565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3190611998565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018080549050610dae9190611a27565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60606000805b84849050811015610fff576000858583818110610e1a57610e19611bfd565b5b905060400201803603810190610e3091906116da565b9050600060056000836000015163ffffffff1681526020019081526020016000205490506000811115610fea57600060038281548110610e7357610e72611bfd565b5b9060005260206000209060020201905060005b8160010180549050811015610fe7576000826001018281548110610ead57610eac611bfd565b5b906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166003811115610f3d57610f3c611b9f565b5b6003811115610f4f57610f4e611b9f565b5b8152505090508a73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015610fbf575084602001516003811115610fa657610fa5611b9f565b5b81602001516003811115610fbd57610fbc611b9f565b5b145b15610fd3578680610fcf90611b27565b9750505b508080610fdf90611b27565b915050610e86565b50505b50508080610ff790611b27565b915050610dfa565b5060008167ffffffffffffffff81111561101c5761101b611c2c565b5b60405190808252806020026020018201604052801561105557816020015b6110426114cf565b81526020019060019003908161103a5790505b5090506000915060005b858590508110156112b557600086868381811061107f5761107e611bfd565b5b90506040020180360381019061109591906116da565b9050600060056000836000015163ffffffff16815260200190815260200160002054905060008111156112a0576000600382815481106110d8576110d7611bfd565b5b9060005260206000209060020201905060005b816001018054905081101561129d57600082600101828154811061111257611111611bfd565b5b906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660038111156111a2576111a1611b9f565b5b60038111156111b4576111b3611b9f565b5b8152505090508b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561122457508460200151600381111561120b5761120a611b9f565b5b8160200151600381111561122257611221611b9f565b5b145b15611289576040518060400160405280866000015163ffffffff1681526020018260200151600381111561125b5761125a611b9f565b5b81525087898061126a90611b27565b9a508151811061127d5761127c611bfd565b5b60200260200101819052505b50808061129590611b27565b9150506110eb565b50505b505080806112ad90611b27565b91505061105f565b5080925050509392505050565b8280548282559060005260206000209081019282156113a75760005260206000209182015b828111156113a65782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff021916908360038111156113905761138f611b9f565b5b02179055505050916001019190600101906112e7565b5b5090506113b49190611501565b5090565b82805482825590600052602060002090810192821561149d5760005260206000209182015b8281111561149c5782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff0219169083600381111561148657611485611b9f565b5b02179055505050916001019190600101906113dd565b5b5090506114aa9190611501565b5090565b50805460008255906000526020600020908101906114cc9190611501565b50565b6040518060400160405280600063ffffffff168152602001600060038111156114fb576114fa611b9f565b5b81525090565b5b8082111561154f57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101611502565b5090565b60008135905061156281611d68565b92915050565b60008083601f84011261157e5761157d611c60565b5b8235905067ffffffffffffffff81111561159b5761159a611c5b565b5b6020830191508360408202830111156115b7576115b6611c6a565b5b9250929050565b6000813590506115cd81611d7f565b92915050565b6000604082840312156115e9576115e8611c65565b5b6115f360406119b8565b9050600061160384828501611638565b6000830152506020611617848285016115be565b60208301525092915050565b60008135905061163281611d8f565b92915050565b60008135905061164781611da6565b92915050565b60006020828403121561166357611662611c74565b5b600061167184828501611553565b91505092915050565b60008060006040848603121561169357611692611c74565b5b60006116a186828701611553565b935050602084013567ffffffffffffffff8111156116c2576116c1611c6f565b5b6116ce86828701611568565b92509250509250925092565b6000604082840312156116f0576116ef611c74565b5b60006116fe848285016115d3565b91505092915050565b6000806000606084860312156117205761171f611c74565b5b600061172e86828701611623565b935050602061173f86828701611553565b9250506040611750868287016115be565b9150509250925092565b6000806040838503121561177157611770611c74565b5b600061177f85828601611623565b925050602061179085828601611623565b9150509250929050565b6000602082840312156117b0576117af611c74565b5b60006117be84828501611638565b91505092915050565b60006117d383836118d8565b60408301905092915050565b60006117ea826119ed565b6117f48185611a05565b93506117ff836119dd565b8060005b8381101561183057815161181788826117c7565b9750611822836119f8565b925050600181019050611803565b5085935050505092915050565b61184681611aba565b82525050565b6000611859601383611a16565b915061186482611c8a565b602082019050919050565b600061187c602183611a16565b915061188782611cb3565b604082019050919050565b600061189f601783611a16565b91506118aa82611d02565b602082019050919050565b60006118c2600983611a16565b91506118cd82611d2b565b602082019050919050565b6040820160008201516118ee6000850182611907565b506020820151611901602085018261183d565b50505050565b61191081611aaa565b82525050565b6000602082019050818103600083015261193081846117df565b905092915050565b600060208201905081810360008301526119518161184c565b9050919050565b600060208201905081810360008301526119718161186f565b9050919050565b6000602082019050818103600083015261199181611892565b9050919050565b600060208201905081810360008301526119b1816118b5565b9050919050565b60006119c26119d3565b90506119ce8282611af6565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a3282611aa0565b9150611a3d83611aa0565b925082821015611a5057611a4f611b70565b5b828203905092915050565b6000611a6682611a80565b9050919050565b6000819050611a7b82611d54565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000611ac582611a6d565b9050919050565b6000611ad782611aa0565b91506000821415611aeb57611aea611b70565b5b600182039050919050565b611aff82611c79565b810181811067ffffffffffffffff82111715611b1e57611b1d611c2c565b5b80604052505050565b6000611b3282611aa0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b6557611b64611b70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f72756c6520646f6573206e6f7420657869737400000000000000000000000000600082015250565b7f70726f746563746564207265736f7572636520646f6573206e6f74206578697360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b7f50726f7669646572206e6f7420617574686f72697a6564000000000000000000600082015250565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60048110611d6557611d64611b9f565b5b50565b611d7181611a5b565b8114611d7c57600080fd5b50565b60048110611d8c57600080fd5b50565b611d9881611aa0565b8114611da357600080fd5b50565b611daf81611aaa565b8114611dba57600080fd5b5056fea26469706673582212202208b1bf1e34d8500491aabe93cfddcc9842ff09d932324019e879f7bcc5143264736f6c63430008070033".hexToByteArray()

        fun deploy(eth: Eth, from: Address): TransactionReceipt {
            val params = Data(
                byteCode + DataEncoder()
                    .build().toByteArray()
            )
            return deploy(eth, from, params)
        }

        // 4 byte selectors (functions) and topics (events)
        val functionRegisterProvider = "RegisterProvider(address)".keccak().copyOfRange(0, 4)
        val functionUnregisterAllProviders = "UnregisterAllProviders()".keccak().copyOfRange(0, 4)
        val functionUnregisterAllResources = "UnregisterAllResources()".keccak().copyOfRange(0, 4)
        val functionUnregisterProvider = "UnregisterProvider(address)".keccak().copyOfRange(0, 4)
        val functionDeleteRule = "deleteRule(uint256,uint256)".keccak().copyOfRange(0, 4)
        val functionRegisterResource = "registerResource(uint32)".keccak().copyOfRange(0, 4)
        val functionRequestPermissions = "requestPermissions(address,(uint32,uint8)[])".keccak().copyOfRange(0, 4)
        val functionSetRule = "setRule(uint256,address,uint8)".keccak().copyOfRange(0, 4)
        val functionUnregisterResource = "unregisterResource(uint32)".keccak().copyOfRange(0, 4)
    }

    // events
    override val listOfEventDecoders: List<(Log) -> Event?> = listOf()

    // functions
    suspend fun RegisterProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionRegisterProvider))
            .encode(protectionAuthorizationId).build()
        return transact(params)
    }

    suspend fun UnregisterAllProviders(): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionUnregisterAllProviders)).build()
        return transact(params)
    }

    suspend fun UnregisterAllResources(): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionUnregisterAllResources)).build()
        return transact(params)
    }

    suspend fun UnregisterProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionUnregisterProvider))
            .encode(protectionAuthorizationId).build()
        return transact(params)
    }

    suspend fun deleteRule(protectedResourceId: AbiUint256, index: AbiUint256): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionDeleteRule))
            .encode(protectedResourceId)
            .encode(index).build()
        return transact(params)
    }

    suspend fun registerResource(protectedResourceId: AbiUint32): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionRegisterResource))
            .encode(protectedResourceId).build()
        return transact(params)
    }

    data class PermissionRequest(val protectedResourceId: AbiUint32, val grantedMethod: AbiUint8) : AbiTuple {
        override fun encode() : DataEncoder {
            return DataEncoder()
                .encode(protectedResourceId)
                .encode(grantedMethod)
        }
    }

    data class Permission(val protectedResourceId: AbiUint32, val grantedMethod: AbiUint8) : AbiTuple {
        constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiUint32::class), dataDecoder.next(AbiUint8::class))
        companion object : Dynamic {
            override fun isDynamic() = isTypeDynamic(AbiUint32::class) || isTypeDynamic(AbiUint8::class)
        }
    }

    @Suppress("UNCHECKED_CAST")
    fun requestPermissions(userId: AbiAddress, permissionRequests: List<PermissionRequest>): List<Permission>
    {
        val params = DataEncoder()
            .encode(Data4(functionRequestPermissions))
            .encode(userId)
            .encode(permissionRequests, -1).build()
        val decoder = DataDecoder(call(params))
        val result = decoder.next(Permission::class, -1)
        return result as List<Permission>
    }

    suspend fun setRule(protectedResourceId: AbiUint256, userId: AbiAddress, method: AbiUint8): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionSetRule))
            .encode(protectedResourceId)
            .encode(userId)
            .encode(method).build()
        return transact(params)
    }

    suspend fun unregisterResource(protectedResourceId: AbiUint32): TransactionReceipt {
        val params = DataEncoder()
            .encode(Data4(functionUnregisterResource))
            .encode(protectedResourceId).build()
        return transact(params)
    }
}
