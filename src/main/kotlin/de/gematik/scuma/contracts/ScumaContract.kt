package de.gematik.scuma.contracts
import de.gematik.kether.abi.DataDecoder
import de.gematik.kether.abi.DataEncoder
import de.gematik.kether.abi.isTypeDynamic
import de.gematik.kether.abi.types.*
import de.gematik.kether.contracts.Contract
import de.gematik.kether.contracts.Event
import de.gematik.kether.eth.Eth
import de.gematik.kether.eth.types.*
import de.gematik.kether.extensions.hexToByteArray
import de.gematik.kether.extensions.keccak
import kotlinx.serialization.ExperimentalSerializationApi
import java.math.BigInteger
@OptIn(ExperimentalSerializationApi::class)
class ScumaContract(
eth: Eth,
baseTransaction: Transaction = Transaction(),
privateKey: BigInteger? = null
) : Contract(eth, baseTransaction, privateKey) {
companion object {
// deployment
val byteCode = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018081600181540180825580915050039060005260206000200160009054906101000a905050600360018160018154018082558091505003906000526020600020905050612b6b806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639f96de0f1161008c578063c82c7bb811610066578063c82c7bb81461020d578063dff836e114610217578063e5c2723d14610235578063edc922a914610265576100ea565b80639f96de0f146101b7578063a31c8ebb146101d5578063c6512a43146101f1576100ea565b80632b07fce3116100c85780632b07fce31461013157806346ce41751461016157806349f245371461017f57806353a5ee831461019b576100ea565b806305240e8b146100ef5780630e2600161461010b578063279ca46914610127575b600080fd5b61010960048036038101906101049190611fa5565b610283565b005b61012560048036038101906101209190611fa5565b610454565b005b61012f61059c565b005b61014b60048036038101906101469190612008565b61070a565b6040516101589190612199565b60405180910390f35b610169610905565b60405161017691906121ca565b60405180910390f35b61019960048036038101906101949190612008565b6109ac565b005b6101b560048036038101906101b09190612008565b610ba0565b005b6101bf610d54565b6040516101cc91906121ca565b60405180910390f35b6101ef60048036038101906101ea91906121e5565b610dee565b005b61020b6004803603810190610206919061224a565b6110aa565b005b610215611260565b005b61021f61137e565b60405161022c919061235b565b60405180910390f35b61024f600480360381019061024a91906123e2565b6114e0565b60405161025c9190612520565b60405180910390f35b61026d611a1e565b60405161027a91906125f1565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890612670565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081111561045057600180808054905061037091906126bf565b81548110610381576103806126f3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106103c0576103bf6126f3565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061041a57610419612722565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d990612670565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808054905061055691906126bf565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190612670565b60405180910390fd5b6000600190505b6001805490508110156106d2576002600060018381548110610656576106556126f3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580806106ca90612751565b915050610631565b50600160006106e19190611bd2565b60018081600181540180825580915050039060005260206000200160009054906101000a905050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079190612670565b60405180910390fd5b600060056000848152602001908152602001600020549050600081116107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec9061280b565b60405180910390fd5b60038181548110610809576108086126f3565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156108f9578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660038111156108d4576108d3612070565b5b60038111156108e6576108e5612070565b5b815250508152602001906001019061083a565b50505050915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d90612670565b60405180910390fd5b600180805490506109a791906126bf565b905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590612877565b60405180910390fd5b60006005600083815260200190815260200160002054905060008114610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8090612909565b60405180910390fd5b60046001816001815401808255809150500390600052602060002050506003600181600181540180825580915050039060005260206000209050508160036001600380549050610ad991906126bf565b81548110610aea57610ae96126f3565b5b90600052602060002090600202016000018190555060046001600480549050610b1391906126bf565b81548110610b2457610b236126f3565b5b9060005260206000200160036001600380549050610b4291906126bf565b81548110610b5357610b526126f3565b5b9060005260206000209060020201600101908054610b72929190611bf3565b506001600380549050610b8591906126bf565b60056000848152602001908152602001600020819055505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610c22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1990612877565b60405180910390fd5b60006005600083815260200190815260200160002054905060008111610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c749061299b565b60405180910390fd5b60036001600380549050610c9191906126bf565b81548110610ca257610ca16126f3565b5b906000526020600020906002020160038281548110610cc457610cc36126f3565b5b9060005260206000209060020201600082015481600001556001820181600101908054610cf2929190611ce9565b509050506003805480610d0857610d07612722565b5b6001900381819060005260206000209060020201600080820160009055600182016000610d359190611ddf565b5050905560056000838152602001908152602001600020600090555050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dce90612877565b60405180910390fd5b6001600380549050610de991906126bf565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390612670565b60405180910390fd5b60006005600084815260200190815260200160002054905060008111610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece9061280b565b60405180910390fd5b600060038281548110610eed57610eec6126f3565b5b9060005260206000209060020201905080600101805490508310610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d90612a07565b60405180910390fd5b8060010160018260010180549050610f5e91906126bf565b81548110610f6f57610f6e6126f3565b5b90600052602060002001816001018481548110610f8f57610f8e6126f3565b5b906000526020600020016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff0219169083600381111561103857611037612070565b5b02179055509050508060010180548061105457611053612722565b5b60019003818190600052602060002001600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690555050905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90612670565b60405180910390fd5b600060056000858152602001908152602001600020549050600081111561125a576003818154811061116d5761116c6126f3565b5b906000526020600020906002020160010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018460038111156111b8576111b7612070565b5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600381111561125257611251612070565b5b021790555050505b50505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d990612877565b60405180910390fd5b60005b60038054905081101561134157600560006003838154811061130a576113096126f3565b5b906000526020600020906002020160000154815260200190815260200160002060009055808061133990612751565b9150506112e5565b50600360006113509190611e00565b6003600181600181540180825580915050039060005260206000209050506004600061137c9190611e24565b565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f990612877565b60405180910390fd5b6000600160038054905061141691906126bf565b67ffffffffffffffff81111561142f5761142e612a27565b5b60405190808252806020026020018201604052801561145d5781602001602082028036833780820191505090505b5090506000600190505b6003805490508110156114d85760038181548110611488576114876126f3565b5b906000526020600020906002020160000154826001836114a891906126bf565b815181106114b9576114b86126f3565b5b60200260200101818152505080806114d090612751565b915050611467565b508091505090565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155b90612877565b60405180910390fd5b6000805b84849050811015611767576000858583818110611588576115876126f3565b5b90506040020180360381019061159e9190612b08565b9050600060056000836000015181526020019081526020016000205490506000811115611752576000600382815481106115db576115da6126f3565b5b9060005260206000209060020201905060005b816001018054905081101561174f576000826001018281548110611615576116146126f3565b5b906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660038111156116a5576116a4612070565b5b60038111156116b7576116b6612070565b5b8152505090508a73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561172757508460200151600381111561170e5761170d612070565b5b8160200151600381111561172557611724612070565b5b145b1561173b57868061173790612751565b9750505b50808061174790612751565b9150506115ee565b50505b5050808061175f90612751565b915050611568565b5060008167ffffffffffffffff81111561178457611783612a27565b5b6040519080825280602002602001820160405280156117bd57816020015b6117aa611e45565b8152602001906001900390816117a25790505b5090506000915060005b85859050811015611a115760008686838181106117e7576117e66126f3565b5b9050604002018036038101906117fd9190612b08565b90506000600560008360000151815260200190815260200160002054905060008111156119fc5760006003828154811061183a576118396126f3565b5b9060005260206000209060020201905060005b81600101805490508110156119f9576000826001018281548110611874576118736126f3565b5b906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16600381111561190457611903612070565b5b600381111561191657611915612070565b5b8152505090508b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561198657508460200151600381111561196d5761196c612070565b5b8160200151600381111561198457611983612070565b5b145b156119e557604051806040016040528086600001518152602001826020015160038111156119b7576119b6612070565b5b8152508789806119c690612751565b9a50815181106119d9576119d86126f3565b5b60200260200101819052505b5080806119f190612751565b91505061184d565b50505b50508080611a0990612751565b9150506117c7565b5080925050509392505050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa590612670565b60405180910390fd5b600060018080549050611ac191906126bf565b67ffffffffffffffff811115611ada57611ad9612a27565b5b604051908082528060200260200182016040528015611b085781602001602082028036833780820191505090505b5090506000600190505b600180549050811015611bca5760018181548110611b3357611b326126f3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600183611b6c91906126bf565b81518110611b7d57611b7c6126f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611bc290612751565b915050611b12565b508091505090565b5080546000825590600052602060002090810190611bf09190611e71565b50565b828054828255906000526020600020908101928215611cd85760005260206000209182015b82811115611cd75782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff02191690836003811115611cc157611cc0612070565b5b0217905550505091600101919060010190611c18565b5b509050611ce59190611e8e565b5090565b828054828255906000526020600020908101928215611dce5760005260206000209182015b82811115611dcd5782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000820160149054906101000a900460ff168160000160146101000a81548160ff02191690836003811115611db757611db6612070565b5b0217905550505091600101919060010190611d0e565b5b509050611ddb9190611e8e565b5090565b5080546000825590600052602060002090810190611dfd9190611e8e565b50565b5080546000825560020290600052602060002090810190611e219190611ee0565b50565b5080546000825590600052602060002090810190611e429190611f0f565b50565b60405180604001604052806000815260200160006003811115611e6b57611e6a612070565b5b81525090565b5b80821115611e8a576000816000905550600101611e72565b5090565b5b80821115611edc57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101611e8f565b5090565b5b80821115611f0b57600080820160009055600182016000611f029190611ddf565b50600201611ee1565b5090565b5b80821115611f2f5760008181611f269190611ddf565b50600101611f10565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f7282611f47565b9050919050565b611f8281611f67565b8114611f8d57600080fd5b50565b600081359050611f9f81611f79565b92915050565b600060208284031215611fbb57611fba611f3d565b5b6000611fc984828501611f90565b91505092915050565b6000819050919050565b611fe581611fd2565b8114611ff057600080fd5b50565b60008135905061200281611fdc565b92915050565b60006020828403121561201e5761201d611f3d565b5b600061202c84828501611ff3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61206a81611f67565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106120b0576120af612070565b5b50565b60008190506120c18261209f565b919050565b60006120d1826120b3565b9050919050565b6120e1816120c6565b82525050565b6040820160008201516120fd6000850182612061565b50602082015161211060208501826120d8565b50505050565b600061212283836120e7565b60408301905092915050565b6000602082019050919050565b600061214682612035565b6121508185612040565b935061215b83612051565b8060005b8381101561218c5781516121738882612116565b975061217e8361212e565b92505060018101905061215f565b5085935050505092915050565b600060208201905081810360008301526121b3818461213b565b905092915050565b6121c481611fd2565b82525050565b60006020820190506121df60008301846121bb565b92915050565b600080604083850312156121fc576121fb611f3d565b5b600061220a85828601611ff3565b925050602061221b85828601611ff3565b9150509250929050565b6004811061223257600080fd5b50565b60008135905061224481612225565b92915050565b60008060006060848603121561226357612262611f3d565b5b600061227186828701611ff3565b935050602061228286828701611f90565b925050604061229386828701612235565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6122d281611fd2565b82525050565b60006122e483836122c9565b60208301905092915050565b6000602082019050919050565b60006123088261229d565b61231281856122a8565b935061231d836122b9565b8060005b8381101561234e57815161233588826122d8565b9750612340836122f0565b925050600181019050612321565b5085935050505092915050565b6000602082019050818103600083015261237581846122fd565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123a2576123a161237d565b5b8235905067ffffffffffffffff8111156123bf576123be612382565b5b6020830191508360408202830111156123db576123da612387565b5b9250929050565b6000806000604084860312156123fb576123fa611f3d565b5b600061240986828701611f90565b935050602084013567ffffffffffffffff81111561242a57612429611f42565b5b6124368682870161238c565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161248460008501826122c9565b50602082015161249760208501826120d8565b50505050565b60006124a9838361246e565b60408301905092915050565b6000602082019050919050565b60006124cd82612442565b6124d7818561244d565b93506124e28361245e565b8060005b838110156125135781516124fa888261249d565b9750612505836124b5565b9250506001810190506124e6565b5085935050505092915050565b6000602082019050818103600083015261253a81846124c2565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061257a8383612061565b60208301905092915050565b6000602082019050919050565b600061259e82612542565b6125a8818561254d565b93506125b38361255e565b8060005b838110156125e45781516125cb888261256e565b97506125d683612586565b9250506001810190506125b7565b5085935050505092915050565b6000602082019050818103600083015261260b8184612593565b905092915050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b600061265a600983612613565b915061266582612624565b602082019050919050565b600060208201905081810360008301526126898161264d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126ca82611fd2565b91506126d583611fd2565b92508282039050818111156126ed576126ec612690565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061275c82611fd2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361278e5761278d612690565b5b600182019050919050565b7f70726f746563746564207265736f7572636520646f6573206e6f74206578697360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006127f5602183612613565b915061280082612799565b604082019050919050565b60006020820190508181036000830152612824816127e8565b9050919050565b7f50726f7669646572206e6f7420617574686f72697a6564000000000000000000600082015250565b6000612861601783612613565b915061286c8261282b565b602082019050919050565b6000602082019050818103600083015261289081612854565b9050919050565b7f72656a6563746564202d2070726f746563746564207265736f7572636520616c60008201527f7265616479206578697374000000000000000000000000000000000000000000602082015250565b60006128f3602b83612613565b91506128fe82612897565b604082019050919050565b60006020820190508181036000830152612922816128e6565b9050919050565b7f72656a6563746564202d2070726f746563746564207265736f7572636520646f60008201527f6573206e6f742065786973740000000000000000000000000000000000000000602082015250565b6000612985602c83612613565b915061299082612929565b604082019050919050565b600060208201905081810360008301526129b481612978565b9050919050565b7f72756c6520646f6573206e6f7420657869737400000000000000000000000000600082015250565b60006129f1601383612613565b91506129fc826129bb565b602082019050919050565b60006020820190508181036000830152612a20816129e4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b612a7582612a5b565b810181811067ffffffffffffffff82111715612a9457612a93612a27565b5b80604052505050565b6000612aa7611f33565b9050612ab38282612a6c565b919050565b600060408284031215612ace57612acd612a56565b5b612ad86040612a9d565b90506000612ae884828501611ff3565b6000830152506020612afc84828501612235565b60208301525092915050565b600060408284031215612b1e57612b1d611f3d565b5b6000612b2c84828501612ab8565b9150509291505056fea2646970667358221220f757174c8b31a2a86ee27582b7ce9724a49b9839d680a232a9c38ed23d19fc9464736f6c63430008110033".hexToByteArray()
fun deploy(eth:Eth, from: Address, privateKey: BigInteger? = null): TransactionReceipt {
val params = Data(
byteCode + DataEncoder()
.build().toByteArray()
)
return deploy(eth, from, params, privateKey)
}
// 4 byte selectors (functions) and topics (events)
val functionDeleteRule = "deleteRule(uint256,uint256)".keccak().copyOfRange(0, 4)
val functionGetPolicy = "getPolicy(uint256)".keccak().copyOfRange(0, 4)
val functionGetProviderCount = "getProviderCount()".keccak().copyOfRange(0, 4)
val functionGetProviders = "getProviders()".keccak().copyOfRange(0, 4)
val functionGetResourceCount = "getResourceCount()".keccak().copyOfRange(0, 4)
val functionGetResourceIds = "getResourceIds()".keccak().copyOfRange(0, 4)
val functionRegisterProvider = "registerProvider(address)".keccak().copyOfRange(0, 4)
val functionRegisterResource = "registerResource(uint256)".keccak().copyOfRange(0, 4)
val functionRequestPermissions = "requestPermissions(address,(uint256,uint8)[])".keccak().copyOfRange(0, 4)
val functionSetRule = "setRule(uint256,address,uint8)".keccak().copyOfRange(0, 4)
val functionUnregisterAllProviders = "unregisterAllProviders()".keccak().copyOfRange(0, 4)
val functionUnregisterAllResources = "unregisterAllResources()".keccak().copyOfRange(0, 4)
val functionUnregisterProvider = "unregisterProvider(address)".keccak().copyOfRange(0, 4)
val functionUnregisterResource = "unregisterResource(uint256)".keccak().copyOfRange(0, 4)
}
// tuples
data class PermissionRequest(val protectedResourceId: AbiUint256,val requestedMethod: AbiUint8) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiUint256::class),dataDecoder.next(AbiUint8::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(protectedResourceId)
.encode(requestedMethod)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiUint256::class)||isTypeDynamic(AbiUint8::class)}
}
data class Rule(val who: AbiAddress,val how: AbiUint8) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiAddress::class),dataDecoder.next(AbiUint8::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(who)
.encode(how)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiAddress::class)||isTypeDynamic(AbiUint8::class)}
}
data class Permission(val protectedResourceId: AbiUint256,val grantedMethod: AbiUint8) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiUint256::class),dataDecoder.next(AbiUint8::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(protectedResourceId)
.encode(grantedMethod)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiUint256::class)||isTypeDynamic(AbiUint8::class)}
}
// events
override val listOfEventDecoders: List<(Log) -> Event?> = listOf()
// functions
suspend fun deleteRule(protectedResourceId: AbiUint256,index: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionDeleteRule))
.encode(protectedResourceId)
.encode(index).build()
return transact(params)
}
fun getPolicy(protectedResourceId: AbiUint256): List<Rule> {
val params = DataEncoder()
.encode(Data4(functionGetPolicy))
.encode(protectedResourceId).build()
val decoder = DataDecoder(call(params))
return decoder.next(Rule::class, -1) as List<Rule>}
fun getProviderCount(): AbiUint256 {
val params = DataEncoder()
.encode(Data4(functionGetProviderCount)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, ) as AbiUint256}
fun getProviders(): List<AbiAddress> {
val params = DataEncoder()
.encode(Data4(functionGetProviders)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiAddress::class, -1) as List<AbiAddress>}
fun getResourceCount(): AbiUint256 {
val params = DataEncoder()
.encode(Data4(functionGetResourceCount)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, ) as AbiUint256}
fun getResourceIds(): List<AbiUint256> {
val params = DataEncoder()
.encode(Data4(functionGetResourceIds)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, -1) as List<AbiUint256>}
suspend fun registerProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionRegisterProvider))
.encode(protectionAuthorizationId).build()
return transact(params)
}
suspend fun registerResource(protectedResourceId: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionRegisterResource))
.encode(protectedResourceId).build()
return transact(params)
}
fun requestPermissions(userId: AbiAddress,permissionRequests: List<PermissionRequest>): List<Permission> {
val params = DataEncoder()
.encode(Data4(functionRequestPermissions))
.encode(userId)
.encode(permissionRequests, -1).build()
val decoder = DataDecoder(call(params))
return decoder.next(Permission::class, -1) as List<Permission>}
suspend fun setRule(protectedResourceId: AbiUint256,userId: AbiAddress,method: AbiUint8): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionSetRule))
.encode(protectedResourceId)
.encode(userId)
.encode(method).build()
return transact(params)
}
suspend fun unregisterAllProviders(): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterAllProviders)).build()
return transact(params)
}
suspend fun unregisterAllResources(): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterAllResources)).build()
return transact(params)
}
suspend fun unregisterProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterProvider))
.encode(protectionAuthorizationId).build()
return transact(params)
}
suspend fun unregisterResource(protectedResourceId: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterResource))
.encode(protectedResourceId).build()
return transact(params)
}
}
