package de.gematik.scuma.contracts
import de.gematik.kether.abi.DataDecoder
import de.gematik.kether.abi.DataEncoder
import de.gematik.kether.abi.isTypeDynamic
import de.gematik.kether.abi.types.*
import de.gematik.kether.contracts.Contract
import de.gematik.kether.contracts.Event
import de.gematik.kether.eth.Eth
import de.gematik.kether.eth.types.*
import de.gematik.kether.extensions.hexToByteArray
import de.gematik.kether.extensions.keccak
import kotlinx.serialization.ExperimentalSerializationApi
import java.math.BigInteger
@OptIn(ExperimentalSerializationApi::class)
class ScumaContract(
eth: Eth,
baseTransaction: Transaction = Transaction()
) : Contract(eth, baseTransaction) {
companion object {
// deployment
val byteCode = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018081600181540180825580915050039060005260206000200160009054906101000a905050600360018160018154018082558091505003906000526020600020905050612959806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636cb0ecfb1161008c578063a31c8ebb11610066578063a31c8ebb14610221578063c82c7bb81461023d578063dff836e114610247578063edc922a914610265576100ea565b80636cb0ecfb146101b75780639892ae70146101e75780639f96de0f14610203576100ea565b80632b07fce3116100c85780632b07fce31461013157806346ce41751461016157806349f245371461017f57806353a5ee831461019b576100ea565b806305240e8b146100ef5780630e2600161461010b578063279ca46914610127575b600080fd5b61010960048036038101906101049190611e2f565b610283565b005b61012560048036038101906101209190611e2f565b610454565b005b61012f61059c565b005b61014b60048036038101906101469190611e92565b61070a565b6040516101589190611fbb565b60405180910390f35b6101696108d8565b6040516101769190611fec565b60405180910390f35b61019960048036038101906101949190611e92565b61097f565b005b6101b560048036038101906101b09190611e92565b610b73565b005b6101d160048036038101906101cc919061206c565b610d27565b6040516101de91906121aa565b60405180910390f35b61020160048036038101906101fc91906121cc565b6111bf565b005b61020b61137a565b6040516102189190611fec565b60405180910390f35b61023b6004803603810190610236919061221f565b611414565b005b61024561169d565b005b61024f6117bb565b60405161025c919061230e565b60405180910390f35b61026d61191d565b60405161027a91906123df565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103089061245e565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081111561045057600180808054905061037091906124ad565b81548110610381576103806124e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106103c0576103bf6124e1565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061041a57610419612510565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d99061245e565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808054905061055691906124ad565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106219061245e565b60405180910390fd5b6000600190505b6001805490508110156106d2576002600060018381548110610656576106556124e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580806106ca9061253f565b915050610631565b50600160006106e19190611ad1565b60018081600181540180825580915050039060005260206000200160009054906101000a905050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107919061245e565b60405180910390fd5b600060056000848152602001908152602001600020549050600081116107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec906125f9565b60405180910390fd5b60038181548110610809576108086124e1565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156108cc57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061083a565b50505050915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610969576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109609061245e565b60405180910390fd5b6001808054905061097a91906124ad565b905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f890612665565b60405180910390fd5b60006005600083815260200190815260200160002054905060008114610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a53906126f7565b60405180910390fd5b60046001816001815401808255809150500390600052602060002050506003600181600181540180825580915050039060005260206000209050508160036001600380549050610aac91906124ad565b81548110610abd57610abc6124e1565b5b90600052602060002090600202016000018190555060046001600480549050610ae691906124ad565b81548110610af757610af66124e1565b5b9060005260206000200160036001600380549050610b1591906124ad565b81548110610b2657610b256124e1565b5b9060005260206000209060020201600101908054610b45929190611af2565b506001600380549050610b5891906124ad565b60056000848152602001908152602001600020819055505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90612665565b60405180910390fd5b60006005600083815260200190815260200160002054905060008111610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4790612789565b60405180910390fd5b60036001600380549050610c6491906124ad565b81548110610c7557610c746124e1565b5b906000526020600020906002020160038281548110610c9757610c966124e1565b5b9060005260206000209060020201600082015481600001556001820181600101908054610cc5929190611bbb565b509050506003805480610cdb57610cda612510565b5b6001900381819060005260206000209060020201600080820160009055600182016000610d089190611c84565b5050905560056000838152602001908152602001600020600090555050565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da290612665565b60405180910390fd5b6000805b84849050811015610f61576000858583818110610dcf57610dce6124e1565b5b905060400201803603810190610de5919061288a565b9050600060056000836000015181526020019081526020016000205490506000811115610f4c57600060038281548110610e2257610e216124e1565b5b9060005260206000209060020201905060005b8160010180549050811015610f49576000826001018281548110610e5c57610e5b6124e1565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508a73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148015610f2157506000856020015182602001511614155b15610f35578680610f319061253f565b9750505b508080610f419061253f565b915050610e35565b50505b50508080610f599061253f565b915050610daf565b5060008167ffffffffffffffff811115610f7e57610f7d6127bf565b5b604051908082528060200260200182016040528015610fb757816020015b610fa4611ca8565b815260200190600190039081610f9c5790505b5090506000915060005b858590508110156111b2576000868683818110610fe157610fe06124e1565b5b905060400201803603810190610ff7919061288a565b905060006005600083600001518152602001908152602001600020549050600081111561119d57600060038281548110611034576110336124e1565b5b9060005260206000209060020201905060005b816001018054905081101561119a57600082600101828154811061106e5761106d6124e1565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508b73ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561113357506000856020015182602001511614155b156111865760405180604001604052808660000151815260200186602001518360200151168152508789806111679061253f565b9a508151811061117a576111796124e1565b5b60200260200101819052505b5080806111929061253f565b915050611047565b50505b505080806111aa9061253f565b915050610fc1565b5080925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461124d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112449061245e565b60405180910390fd5b600060056000858152602001908152602001600020549050600081116112a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129f906125f9565b60405180910390fd5b600381815481106112bc576112bb6124e1565b5b906000526020600020906002020160010160405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f490612665565b60405180910390fd5b600160038054905061140f91906124ad565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114999061245e565b60405180910390fd5b600060056000848152602001908152602001600020549050600081116114fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f4906125f9565b60405180910390fd5b600060038281548110611513576115126124e1565b5b906000526020600020906002020190508060010180549050831061156c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156390612903565b60405180910390fd5b806001016001826001018054905061158491906124ad565b81548110611595576115946124e1565b5b90600052602060002090600202018160010184815481106115b9576115b86124e1565b5b90600052602060002090600202016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101559050508060010180548061164f5761164e612510565b5b6001900381819060005260206000209060020201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050905550505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161171f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171690612665565b60405180910390fd5b60005b60038054905081101561177e576005600060038381548110611747576117466124e1565b5b90600052602060002090600202016000015481526020019081526020016000206000905580806117769061253f565b915050611722565b506003600061178d9190611cc2565b600360018160018154018082558091505003906000526020600020905050600460006117b99190611ce6565b565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161183f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183690612665565b60405180910390fd5b6000600160038054905061185391906124ad565b67ffffffffffffffff81111561186c5761186b6127bf565b5b60405190808252806020026020018201604052801561189a5781602001602082028036833780820191505090505b5090506000600190505b60038054905081101561191557600381815481106118c5576118c46124e1565b5b906000526020600020906002020160000154826001836118e591906124ad565b815181106118f6576118f56124e1565b5b602002602001018181525050808061190d9061253f565b9150506118a4565b508091505090565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a49061245e565b60405180910390fd5b6000600180805490506119c091906124ad565b67ffffffffffffffff8111156119d9576119d86127bf565b5b604051908082528060200260200182016040528015611a075781602001602082028036833780820191505090505b5090506000600190505b600180549050811015611ac95760018181548110611a3257611a316124e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600183611a6b91906124ad565b81518110611a7c57611a7b6124e1565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611ac19061253f565b915050611a11565b508091505090565b5080546000825590600052602060002090810190611aef9190611d07565b50565b828054828255906000526020600020906002028101928215611baa5760005260206000209160020282015b82811115611ba95782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155505091600201919060020190611b1d565b5b509050611bb79190611d24565b5090565b828054828255906000526020600020906002028101928215611c735760005260206000209160020282015b82811115611c725782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155505091600201919060020190611be6565b5b509050611c809190611d24565b5090565b5080546000825560020290600052602060002090810190611ca59190611d24565b50565b604051806040016040528060008152602001600081525090565b5080546000825560020290600052602060002090810190611ce39190611d6a565b50565b5080546000825590600052602060002090810190611d049190611d99565b50565b5b80821115611d20576000816000905550600101611d08565b5090565b5b80821115611d6657600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201611d25565b5090565b5b80821115611d9557600080820160009055600182016000611d8c9190611c84565b50600201611d6b565b5090565b5b80821115611db95760008181611db09190611c84565b50600101611d9a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dfc82611dd1565b9050919050565b611e0c81611df1565b8114611e1757600080fd5b50565b600081359050611e2981611e03565b92915050565b600060208284031215611e4557611e44611dc7565b5b6000611e5384828501611e1a565b91505092915050565b6000819050919050565b611e6f81611e5c565b8114611e7a57600080fd5b50565b600081359050611e8c81611e66565b92915050565b600060208284031215611ea857611ea7611dc7565b5b6000611eb684828501611e7d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ef481611df1565b82525050565b611f0381611e5c565b82525050565b604082016000820151611f1f6000850182611eeb565b506020820151611f326020850182611efa565b50505050565b6000611f448383611f09565b60408301905092915050565b6000602082019050919050565b6000611f6882611ebf565b611f728185611eca565b9350611f7d83611edb565b8060005b83811015611fae578151611f958882611f38565b9750611fa083611f50565b925050600181019050611f81565b5085935050505092915050565b60006020820190508181036000830152611fd58184611f5d565b905092915050565b611fe681611e5c565b82525050565b60006020820190506120016000830184611fdd565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261202c5761202b612007565b5b8235905067ffffffffffffffff8111156120495761204861200c565b5b60208301915083604082028301111561206557612064612011565b5b9250929050565b60008060006040848603121561208557612084611dc7565b5b600061209386828701611e1a565b935050602084013567ffffffffffffffff8111156120b4576120b3611dcc565b5b6120c086828701612016565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161210e6000850182611efa565b5060208201516121216020850182611efa565b50505050565b600061213383836120f8565b60408301905092915050565b6000602082019050919050565b6000612157826120cc565b61216181856120d7565b935061216c836120e8565b8060005b8381101561219d5781516121848882612127565b975061218f8361213f565b925050600181019050612170565b5085935050505092915050565b600060208201905081810360008301526121c4818461214c565b905092915050565b6000806000606084860312156121e5576121e4611dc7565b5b60006121f386828701611e7d565b935050602061220486828701611e1a565b925050604061221586828701611e7d565b9150509250925092565b6000806040838503121561223657612235611dc7565b5b600061224485828601611e7d565b925050602061225585828601611e7d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006122978383611efa565b60208301905092915050565b6000602082019050919050565b60006122bb8261225f565b6122c5818561226a565b93506122d08361227b565b8060005b838110156123015781516122e8888261228b565b97506122f3836122a3565b9250506001810190506122d4565b5085935050505092915050565b6000602082019050818103600083015261232881846122b0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006123688383611eeb565b60208301905092915050565b6000602082019050919050565b600061238c82612330565b612396818561233b565b93506123a18361234c565b8060005b838110156123d25781516123b9888261235c565b97506123c483612374565b9250506001810190506123a5565b5085935050505092915050565b600060208201905081810360008301526123f98184612381565b905092915050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000612448600983612401565b915061245382612412565b602082019050919050565b600060208201905081810360008301526124778161243b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124b882611e5c565b91506124c383611e5c565b92508282039050818111156124db576124da61247e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061254a82611e5c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361257c5761257b61247e565b5b600182019050919050565b7f70726f746563746564207265736f7572636520646f6573206e6f74206578697360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006125e3602183612401565b91506125ee82612587565b604082019050919050565b60006020820190508181036000830152612612816125d6565b9050919050565b7f50726f7669646572206e6f7420617574686f72697a6564000000000000000000600082015250565b600061264f601783612401565b915061265a82612619565b602082019050919050565b6000602082019050818103600083015261267e81612642565b9050919050565b7f72656a6563746564202d2070726f746563746564207265736f7572636520616c60008201527f7265616479206578697374000000000000000000000000000000000000000000602082015250565b60006126e1602b83612401565b91506126ec82612685565b604082019050919050565b60006020820190508181036000830152612710816126d4565b9050919050565b7f72656a6563746564202d2070726f746563746564207265736f7572636520646f60008201527f6573206e6f742065786973740000000000000000000000000000000000000000602082015250565b6000612773602c83612401565b915061277e82612717565b604082019050919050565b600060208201905081810360008301526127a281612766565b9050919050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127f7826127ae565b810181811067ffffffffffffffff82111715612816576128156127bf565b5b80604052505050565b6000612829611dbd565b905061283582826127ee565b919050565b6000604082840312156128505761284f6127a9565b5b61285a604061281f565b9050600061286a84828501611e7d565b600083015250602061287e84828501611e7d565b60208301525092915050565b6000604082840312156128a05761289f611dc7565b5b60006128ae8482850161283a565b91505092915050565b7f72756c6520646f6573206e6f7420657869737400000000000000000000000000600082015250565b60006128ed601383612401565b91506128f8826128b7565b602082019050919050565b6000602082019050818103600083015261291c816128e0565b905091905056fea2646970667358221220cdff768b21f41cd97cfc4ca2d8c91f03b40f8967523013603ddac1dc473bd29864736f6c63430008110033".hexToByteArray()
fun deploy(eth:Eth, from: Address): TransactionReceipt {
val params = Data(
byteCode + DataEncoder()
.build().toByteArray()
)
return deploy(eth, from, params)
}
// 4 byte selectors (functions) and topics (events)
val functionDeleteRule = "deleteRule(uint256,uint256)".keccak().copyOfRange(0, 4)
val functionGetPolicy = "getPolicy(uint256)".keccak().copyOfRange(0, 4)
val functionGetProviderCount = "getProviderCount()".keccak().copyOfRange(0, 4)
val functionGetProviders = "getProviders()".keccak().copyOfRange(0, 4)
val functionGetResourceCount = "getResourceCount()".keccak().copyOfRange(0, 4)
val functionGetResourceIds = "getResourceIds()".keccak().copyOfRange(0, 4)
val functionRegisterProvider = "registerProvider(address)".keccak().copyOfRange(0, 4)
val functionRegisterResource = "registerResource(uint256)".keccak().copyOfRange(0, 4)
val functionRequestPermissions = "requestPermissions(address,(uint256,uint256)[])".keccak().copyOfRange(0, 4)
val functionSetRule = "setRule(uint256,address,uint256)".keccak().copyOfRange(0, 4)
val functionUnregisterAllProviders = "unregisterAllProviders()".keccak().copyOfRange(0, 4)
val functionUnregisterAllResources = "unregisterAllResources()".keccak().copyOfRange(0, 4)
val functionUnregisterProvider = "unregisterProvider(address)".keccak().copyOfRange(0, 4)
val functionUnregisterResource = "unregisterResource(uint256)".keccak().copyOfRange(0, 4)
}
// tuples
data class PermissionRequest(val protectedResourceId: AbiUint256,val requestedMethods: AbiUint256) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiUint256::class),dataDecoder.next(AbiUint256::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(protectedResourceId)
.encode(requestedMethods)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiUint256::class)||isTypeDynamic(AbiUint256::class)}
}
data class Rule(val who: AbiAddress,val how: AbiUint256) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiAddress::class),dataDecoder.next(AbiUint256::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(who)
.encode(how)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiAddress::class)||isTypeDynamic(AbiUint256::class)}
}
data class Permission(val protectedResourceId: AbiUint256,val grantedMethods: AbiUint256) : AbiTuple {
constructor(dataDecoder: DataDecoder) : this(dataDecoder.next(AbiUint256::class),dataDecoder.next(AbiUint256::class))override fun encode(): DataEncoder {
return DataEncoder()
.encode(protectedResourceId)
.encode(grantedMethods)
}
companion object : Dynamic {
override fun isDynamic() = isTypeDynamic(AbiUint256::class)||isTypeDynamic(AbiUint256::class)}
}
// events
override val listOfEventDecoders: List<(Log) -> Event?> = listOf()
// functions
suspend fun deleteRule(protectedResourceId: AbiUint256,index: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionDeleteRule))
.encode(protectedResourceId)
.encode(index).build()
return transact(params)
}
fun getPolicy(protectedResourceId: AbiUint256): List<Rule> {
val params = DataEncoder()
.encode(Data4(functionGetPolicy))
.encode(protectedResourceId).build()
val decoder = DataDecoder(call(params))
return decoder.next(Rule::class, -1) as List<Rule>}
fun getProviderCount(): AbiUint256 {
val params = DataEncoder()
.encode(Data4(functionGetProviderCount)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, ) as AbiUint256}
fun getProviders(): List<AbiAddress> {
val params = DataEncoder()
.encode(Data4(functionGetProviders)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiAddress::class, -1) as List<AbiAddress>}
fun getResourceCount(): AbiUint256 {
val params = DataEncoder()
.encode(Data4(functionGetResourceCount)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, ) as AbiUint256}
fun getResourceIds(): List<AbiUint256> {
val params = DataEncoder()
.encode(Data4(functionGetResourceIds)).build()
val decoder = DataDecoder(call(params))
return decoder.next(AbiUint256::class, -1) as List<AbiUint256>}
suspend fun registerProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionRegisterProvider))
.encode(protectionAuthorizationId).build()
return transact(params)
}
suspend fun registerResource(protectedResourceId: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionRegisterResource))
.encode(protectedResourceId).build()
return transact(params)
}
fun requestPermissions(userId: AbiAddress,permissionRequests: List<PermissionRequest>): List<Permission> {
val params = DataEncoder()
.encode(Data4(functionRequestPermissions))
.encode(userId)
.encode(permissionRequests, -1).build()
val decoder = DataDecoder(call(params))
return decoder.next(Permission::class, -1) as List<Permission>}
suspend fun setRule(protectedResourceId: AbiUint256,userId: AbiAddress,methods: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionSetRule))
.encode(protectedResourceId)
.encode(userId)
.encode(methods).build()
return transact(params)
}
suspend fun unregisterAllProviders(): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterAllProviders)).build()
return transact(params)
}
suspend fun unregisterAllResources(): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterAllResources)).build()
return transact(params)
}
suspend fun unregisterProvider(protectionAuthorizationId: AbiAddress): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterProvider))
.encode(protectionAuthorizationId).build()
return transact(params)
}
suspend fun unregisterResource(protectedResourceId: AbiUint256): TransactionReceipt {
val params = DataEncoder()
.encode(Data4(functionUnregisterResource))
.encode(protectedResourceId).build()
return transact(params)
}
}
